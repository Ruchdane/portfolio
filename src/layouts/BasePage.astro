---
import i18next from "i18next";
import { BaseHead, Header, Footer } from "@/components";
import { SEOSchema } from "@/schema/seo";
import { slide } from "astro:transitions";
import type { WithContext, Thing } from "schema-dts";

interface Props<T extends Thing> {
  title: string;
  description: string;
  jsonLd: WithContext<T>;
  image?: ImageMetadata | undefined;
  class?: string;
}

const {
  title,
  description,
  image,
  jsonLd,
  class: className,
  ...rest
} = Astro.props;

const result = SEOSchema.safeParse({ title, description });

if (import.meta.env.PROD && !result.success) {
  const errorMessages = result.error.issues
    .map((issue) => issue.message)
    .join(", ");
  throw new Error(`SEO Validation Failed: ${errorMessages}`);
}

if (import.meta.env.DEV && !result.success) {
  console.error(
    "SEO Validation Errors:",
    result.error.issues.map((issue) => issue.message)
  );
}
---

<!doctype html>
<html lang={i18next.language}>
  <head>
    <BaseHead title={title} description={description} image={image} />
    {
      jsonLd !== undefined ? (
        <script
          type="application/ld+json"
          is:inline
          set:html={JSON.stringify(jsonLd)}
        />
      ) : undefined
    }
  </head>
  <body>
    <Header />
    <main transition:animate={slide()} class={className} {...rest}>
      <slot />
    </main>
    <Footer />
    {import.meta.env.PROD ? <script src="../script/posthog.js"></script> : null }
  </body>
</html>
