---
import { t, changeLanguage } from "i18next";
import { Package } from "lucide-astro";
import { SITE_URL } from "@/consts";
import banner_picture from "@/assets/images/banner_picture.jpg";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { generatePersonSchema, generateProjectListSchema, getMe, type Education, type Experience, type Technologie, } from "@/schema";
import { BasePage } from "@/layouts";
import { SquareArrowOutUpRight } from "lucide-astro";
import { ProjectCard, TechnologieBadge, SocialLinks, AnchorTabs, TabTrigger, TabContent, HistoryElement, } from "@/components";

changeLanguage("yo");

const home = (path: string) => t(`page.home.${path}`);
const section = (path: string) => home(`section.${path}`);
const featuredProject = (await getCollection("project")).filter(({ data: project }) => project.isFeatured);
const orderByBeginDate = (a: {
    data: Education | Experience;
}, b: {
    data: Education | Experience;
}): number => b.data.beginDate.getTime() - a.data.beginDate.getTime();
const experienceList = (await getCollection("experience")).sort(orderByBeginDate);
const educationList = (await getCollection("education")).sort(orderByBeginDate);
const me = await getMe();
const designStack: Technologie[] = [
    "figma",
    "penpot",
    "miro"
];
const managementStack: Technologie[] = [
    "notion",
    "azure_devops",
    "github",
];
const webStack: Technologie[] = [
    "aspnet",
    "astro",
    "next",
    "tailwindcss",
    "postgresql",
];
const mobileStack: Technologie[] = ["flutter", "firebase"];
const desktopStack: Technologie[] = ["winform", "tauri"];
---

<BasePage
  title={home("title")}
  description={home("description")}
  jsonLd={{
    "@context": "https://schema.org",
    "@type": "WebPage",
    url: SITE_URL,
    name: home("name"),
    description: home("description"),
    author: generatePersonSchema(me),
    mainEntity: {
      name: section("projects.title"),
      ...generateProjectListSchema(
        featuredProject.map((entry) => ({ id: entry.id, ...entry.data }))
      ),
    },
  }}
>
  <section class="banner">
    <div class="banner-image">
      <Image src={banner_picture} loading="eager" alt={t("image.ruchdane")} />
    </div>
    <div class="banner-content">
      <div class="banner-text">
        <h1>
          {home("greeting")} <strong> {home("role")} </strong>
        </h1>
        <p> {home("value_proposition")} </p>
        <a href="#email" class="button primary">{home("cta")}</a>
        <div class="banner-links">
          <SocialLinks {...me.socials} />
        </div>
      </div>
    </div>
  </section>
  <section class="wrapper project" itemprop="hasPart">
    <div>
      <h2 transition:name="project-section-title">
        <span> {section("projects.title")}</span>
        <a
          class="icon-button"
          href="/project"
          aria-label={section("projects.view_all")}>
          <SquareArrowOutUpRight /></a
        >
      </h2>
      <p itemprop="name" class="text-body">
        {section("projects.description")}
      s</p>
    </div>
    <div class="project-container">
      {featuredProject.map((data) => <ProjectCard {...data} />)}
    </div>
  </section>
  <section class="wrapper tech-stack">
    <h2>{section("stacks.title")}</h2>
    <p class="text-body">{section("stacks.description")}</p>
    <div class="tech-stack-container">
      <div class="tech-stack-item">
        <h3>
          <Package />
          <span>{section("stacks.design")}</span>
        </h3>
        <div class="tech-stack-container">
          {designStack.map((name) => <TechnologieBadge name={name} />)}
        </div>
      </div>
      <div class="tech-stack-item">
        <h3>
          <Package />
          <span>{section("stacks.management")}</span>
        </h3>
        <div class="tech-stack-container">
          {managementStack.map((name) => <TechnologieBadge name={name} />)}
        </div>
      </div>
     <div class="tech-stack-item">
        <h3>
          <Package />
          <span>{section("stacks.web")}</span>
        </h3>
        <div class="tech-stack-container">
          {webStack.map((name) => <TechnologieBadge name={name} />)}
        </div>
      </div>
      <div class="tech-stack-item">
        <h3>
          <Package />
          <span>{section("stacks.desktop")}</span>
        </h3>
        <div class="tech-stack-container">
          {desktopStack.map((name) => <TechnologieBadge name={name} />)}
        </div>
      </div>
      <div class="tech-stack-item">
        <h3>
          <Package />
          <span>{section("stacks.mobile")}</span>
        </h3>
        <div class="tech-stack-container">
          {mobileStack.map((name) => <TechnologieBadge name={name} />)}
        </div>
      </div>
    </div>
  </section>
  <section class="wrapper history">
    <AnchorTabs>
      <div class="history-trigger">
        <TabTrigger key="education">{section("history.education")}</TabTrigger>
        <TabTrigger key="experience">{section("history.experience")}</TabTrigger>
      </div>
      <div class="history-content">
        <TabContent key="experience">
          {experienceList.map((data) => <HistoryElement {...data} />)}
        </TabContent>
        <TabContent key="education">
          {educationList.map((data) => <HistoryElement {...data} />)}
        </TabContent>
      </div>
    </AnchorTabs>
  </section>
</BasePage>
<style lang="scss">
  @use "../../styles/media-query" as *;

  section {
    padding: 2rem;
  }
  .banner {
    font-family: "JetBrainsMono", monospace;
    background-color: var(--primary-200);
    font-weight: 800;
    font-size: var(--font-h5);
    @include breakpoint(desktop) {
      display: grid;
      grid-template-columns: 1fr 1fr;
      align-items: center;
      gap: 38px;
      padding: 6rem;
    }

    &-content {
      @include breakpoint(desktop) {
        max-width: 500%;
      }
    }
    &-image {
      margin-inline: auto;
      width: fit-content;
      position: relative;
      @include breakpoint(desktop) {
        order: 1;
      }
      img {
        border: 1px solid var(--accent-800);
        border-radius: 100%;
        @include breakpoint(tablet) {
          width: 80%;
        }
        @include breakpoint(desktop) {
          width: 100%;
        }
      }
    }
    &-text {
      display: flex;
      flex-direction: column;
      justify-content: center;

      h1,
      p {
        font-size: var(--font-body);
        font-weight: normal;
        margin-block: 0;
        line-height: 1.7;
      }

      span {
        font-weight: normal;
      }

      strong {
        display: block;
        font-size: var(--font-h4);
        color: var(--accent-800);
      }
      button,
      .button {
        text-align: center;
        font-weight: 800;
        margin-block: 1rem;
        max-width: 500px;
      }
    }
    &-links {
      margin-top: 16px;
    }
  }

  .project {
    &-header {
      h2 {
        font-size: var(--font-h3);
        font-weight: 800;
      }
      margin-bottom: 32px;
    }
    &-container {
      display: flex;
      flex-direction: column;
      gap: 32px;
      @include breakpoint(tablet) {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));
      }
    }
  }

  .tech-stack {
    margin-block: 36px;
    h3 {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 16px;
      width: 100%;
      text-align: center;
      margin-block: 18px;
      text-transform: capitalize;
      @include breakpoint(tablet) {
        width: fit-content;
        text-align: left;
      }
      @include breakpoint(desktop) {
        text-align: center;
      }
    }

    &-item {
      :nth-child(n + 6) {
        display: none;
      }
      @include breakpoint(tablet) {
        :nth-child(n + 6) {
          display: block;
        }
        width: 100%;
        margin: 36px 18px;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 16px;
      }
    }

    &-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 16px;
      font-size: var(--font-h6);
      @include breakpoint(tablet) {
        width: 100%;
        justify-content: space-around;
      }
      @include breakpoint(desktop) {
        justify-content: center;
      }
    }
  }

  .history {
    max-width: 700px;
    margin-inline: auto;
    &-trigger {
      width: 100%;
      background: var(--neutral-400);
      padding: 9px;
      padding-bottom: 18px;
      border-radius: 16px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 16px;
      @include breakpoint(tablet) {
        flex-direction: row;
      }
    }
  }
</style>
