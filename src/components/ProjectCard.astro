---
import { Globe, Download, Code, ArrowRight } from "lucide-astro";
import { Image } from "astro:assets";
import { PLATFORME_MAP } from "@/consts";
import { type Project } from "@/schema";
import { Carousel } from "@/components/Carousel";
import TechnologieBadge from "@/components/TechnologieBadge.astro";
interface Props {
  slug: string;
  data: Project;
}

const {
  slug,
  data: {
    logo,
    title,
    description,
    technologies: rawTechnologies,
    platformes: rawPlatformes,
    thumbs,
    websiteUrl,
    downloadUrl,
    sourceUrl,
  },
} = Astro.props;
const technologies = rawTechnologies.sort(
  (techA, techB) => techA.length - techB.length
);
const platformes = Object.values(PLATFORME_MAP).filter(({ items }) =>
  rawPlatformes.some((value) => items.includes(value))
);
---

<article class="project-card" transition:name={`project-card-${slug}`}>
  <div class="project-thumbnails">
    <Carousel limit={3} images={thumbs} />
  </div>
  <div class="project-content">
    <div class="project-title">
      <h1>
        {
          logo === undefined ? (
            title[0]
          ) : (
            <Image src={logo} height="36" width="36" alt={title[0]} />
          )
        }
        <span> {title} </span>
      </h1>
      <a
        class="icon-button"
        href={`/project/${slug}`}
        title="Lire plus"
        aria-label="Lire plus"
      >
        <ArrowRight alt="Lire plus" />
      </a>
    </div>
    <div class="project-platformes">
      {platformes.map(({name, icon: Icon}) => <Icon data-platform={name.toLowerCase()}/>)}
    </div>
    <p class="project-description">{description}</p>

    <div class="project-technologies">
      {technologies.map((tech) => <TechnologieBadge name={tech} />)}
    </div>

    <div class="project-actions">
      {
        websiteUrl && (
          <a
            href={websiteUrl}
            target="_blank"
            rel="noopener"
            class="button secondary"
          >
            <Globe />
            <span> Visiter </span>
          </a>
        )
      }

      {
        downloadUrl && (
          <a href={downloadUrl} target="_blank" class="button primary">
            <Download />
            <span> Télécharger </span>
          </a>
        )
      }

      {
        sourceUrl && (
          <a
            href={sourceUrl}
            target="_blank"
            target="_blank"
            rel="noopener"
            class="button secondary"
          >
            <Code />
            <span> Source </span>
          </a>
        )
      }
    </div>
  </div>
</article>

<style lang="scss">
  @use "../styles/media-query" as *;
  .project {
    &-card {
      background-color: var(--neutral-50);
      padding: 16px;
      border-radius: 0.5rem;
      box-shadow: 0 6px 10px rgba(24, 24, 27, 0.08), 0 12px 20px rgba(39, 39, 42, 0.05);
      display: flex;
      overflow: hidden;
      flex-direction: column;
      @include breakpoint(tablet) {
        flex-direction: row;
      }
    }

    &-thumbnails {
      position: relative;
      margin-block: auto;
      & :global(img) {
        max-height: 300px;
      }
      @include breakpoint(desktop) {
        max-width: 300px;
      }
    }

    &-content {
      display: flex;
      flex-direction: column;
      padding: 1.5rem;
      @include breakpoint(desktop) {
        width: 100%;
      }
    }

    &-title {
      display: flex;
      justify-content: space-between;
      h1 {
        font-size: var(--font-h4);
      }
      align-items: center;
      font-weight: 700;
      color: #111827;
      margin-bottom: 0.5rem;
    }

    &-description {
      color: #4b5563;
      margin-bottom: 1rem;
    }

    &-platforme {
      display: none;
    }
    
    &-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }

    &-actions {
      margin-top: auto;
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 0.75rem;
      .button {
        max-width: 300px;
      }
      @include breakpoint(tablet) {
        flex-direction: row;
        .button {
          width: 100%;
        }
      }
    }
  }

  .icon-button {
    transition: transform 0.3s ease-in-out;
    &:hover {
      transform: translateX(5px);
    }
  }
</style>
