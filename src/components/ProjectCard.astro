---
import { Globe, Download, Code, ArrowRight } from 'lucide-astro'
import { Image } from 'astro:assets';
import { type Project } from "@/schema";
import { Carousel } from '@/components/Carousel'
import TechnologieBadge from '@/components/TechnologieBadge.astro'
interface Props {
  slug: string,
  data: Project
}

const { slug, data: {logo, title, description, technologies, thumbs, websiteUrl, downloadUrl, sourceUrl} } = Astro.props;
---
<div class="project-card">
  <div class="project-thumbnails">
    <Carousel width={300} height={120} images={thumbs}/>
  </div>
  <div class="project-content">
    <div class="project-title">
      <h3>
        <Image src={logo} height="36" width="36" alt={title[0]} />
        <span> {title}  </span>
      </h3>
      <a class="icon-button" href={`/project/${slug}`}>
        <ArrowRight>
      </a>
    </div>
    <p class="project-description">{description}</p>

    <div class="project-technologies">
      {technologies.map((tech) => <TechnologieBadge name={tech} />)}
    </div>

    <div class="project-actions">
      {websiteUrl && (
        <a
          href={websiteUrl}
          rel="noopener"
          class="button secondary"
        >
          <Globe/>
          <span> Visiter </span>
        </a>
      )}
      
      {downloadUrl && (
        <a
          href={downloadUrl}
          class="button primary"
        >
         <Download/>
          Télécharger
        </a>
      )}

      {sourceUrl && (
        <a
        href={sourceUrl}
        target="_blank"
        rel="noopener"
          class="button secondary"
        >
          <Code/>
          Source
        </a>
      )}
    </div>
  </div>
</div>

<style lang="scss">
  @use "../styles/media-query" as *;
  .project{
    &-card {
      background-color: var(--white);
      padding: 16px;
      border-radius: 0.5rem;
      box-shadow: var(--neutral-800) 0px 4px 8px 0px;
      display: flex;
      overflow: hidden;
      flex-direction: column;
      @include breakpoint(tablet) {
        flex-direction: row;
      }
    }
    
    &-thumbnails {
      position: relative;
      height: 12rem;

      @media (min-width: 640px) {
        height: 100%;
        width: 300px;
        margin-inline: auto;
      }
    }
      
  &-content {
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
  }

  &-title {
    display: flex;
    justify-content: space-between;
    h3 {
      font-size: var(--font-h4);
    }
    align-items: center;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  &-description {
    color: #4b5563;
    margin-bottom: 1rem;
  }

  &-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  &-actions {
    margin-top: auto;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    @include breakpoint(tablet) {
      flex-direction: row;
      .button {
        width:  100%;
      }
    }
  }
}


.icon-button {
  transition: transform 0.3s ease-in-out;
  &:hover {
    transform: translateX(5px)
  }
}

</style>