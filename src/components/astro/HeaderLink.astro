---
import type { HTMLAttributes } from "astro/types";
import { t } from "i18next";
import i18next from "i18next";
type Props = HTMLAttributes<"a"> & { title: string };

// @ts-ignore
import { localizePath } from "astro-i18next";
const { href, class: className, title, ...props } = Astro.props;

const { pathname } = Astro.url;
const localizedPath = localizePath(href, i18next.language);
const basepath = localizePath("/", i18next.language);
const isActive =
  localizedPath === pathname ||
  (localizedPath !== basepath && pathname.startsWith(localizedPath));
---

<a
  href={localizePath(href)}
  class:list={[className, { active: isActive }]}
  {...props}
>
  {t(title)}
</a>
<style lang="scss" scoped>
  a {
    position: relative;
    color: var(--neutral-800);
    text-decoration: none;

    &:not(.active) {
      &::after {
        content: "";
        position: absolute;
        width: 0;
        height: 2px;
        bottom: -2px;
        left: 0;
        background-color: var(--accent-600);
        transition: width 0.3s ease-in-out;
      }

      &:hover::after {
        width: 100%;
      }
    }

    &.active {
      font-weight: bolder;
      border-bottom: 2px solid var(--accent-800);
    }
  }
</style>
