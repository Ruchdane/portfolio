---
import { Globe, Download, Code, ArrowRight } from "lucide-astro";
import { Image } from "astro:assets";
import { PLATFORME_MAP, type Language } from "@/consts";
import { type Project } from "@/schema";
import { Carousel, TechnologieBadge } from "@/components/astro";
import i18next, { t } from "i18next";
// @ts-ignore
import { localizePath } from "astro-i18next";

interface Props {
  id: string;
  data: Project;
}

const p = (path: string) => t(`component.project_card.${path}`);
const language = (i18next.language || "fr") as Language;

const {
  id,
  data: {
    logo,
    title: titles,
    description: descriptions,
    technologies: rawTechnologies,
    platformes: rawPlatformes,
    thumbs,
    websiteUrl,
    downloadUrl,
    sourceUrl,
  },
} = Astro.props;
const title = titles[language] || id;
const description = descriptions[language] || "";
const technologies = rawTechnologies.sort(
  (techA, techB) => techA.length - techB.length
);
const platformes = Object.values(PLATFORME_MAP).filter(({ items }) =>
  rawPlatformes.some((value) => items.includes(value))
);
const actions = [
  {
    id: "download",
    href: downloadUrl,
    label: p("download"),
    icon: Download,
    class: "button primary",
    rel: null,
  },
  {
    id: "website",
    href: websiteUrl,
    label: p("checkout"),
    icon: Globe,
    class: "button secondary",
    rel: "noopener",
  },
  {
    id: "source",
    href: sourceUrl,
    label: p("view_source"),
    icon: Code,
    class: "button secondary",
    rel: "noopener",
  },
]
  .filter((action) => !!action.href)
  .slice(0, 2);
---

<article class="project-card" transition:name={`project-card-${id}`}>
  <div class="project-container">
    <div class="project-thumbnails">
      <Carousel
        limit={3}
        images={thumbs}
        transition:name={`project-${id}-thumbnails`}
      />
    </div>
    <div class="project-content">
      <h1>
        <a
          class="icon-button"
          href={localizePath(`/project/${id}`)}
          title={p("read_more")}
          aria-label={p("read_more")}
        >
          <div class="project-name" transition:name={`project-${id}-name`}>
            {
              logo === undefined ? (
                id[0]
              ) : (
                <Image src={logo} height="36" width="36" alt={title[0]} />
              )
            }
            <span> {id?.toUpperCase()} </span>
          </div>
          <ArrowRight alt={p("read_more")} />
        </a>
      </h1>
      <div class="project-platformes hidden">
        {
          platformes.map(({ name, icon: Icon }) => (
            <Icon data-platform={name.toLowerCase()} />
          ))
        }
      </div>
      <p
        class="project-description"
        transition:name={`project-${id}-description`}
      >
        {description}
      </p>
      <div
        class="project-technologies"
        transition:name={`project-${id}-technologies`}
      >
        {technologies.map((tech) => <TechnologieBadge name={tech} />)}
      </div>
      <div class="project-actions" transition:name={`project-${id}-actions`}>
        {
          actions.map(({ icon: IconComponent, label, ...props }) => (
            <a target="_blank" {...props}>
              <IconComponent />
              <span> {label} </span>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</article>

<style lang="scss">
  @use "~/media-query" as *;
  .project {
    &-container {
      display: flex;
      height: 100%;
      flex-direction: column;
      @container (min-width: 900px) {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr 1fr;
      }
    }

    &-card {
      padding: 1.5rem;
      container-type: inline-size;
      border-radius: 0.5rem;
      background-color: var(--neutral-50);
      box-shadow:
        0 6px 10px rgba(24, 24, 27, 0.08),
        0 12px 20px rgba(39, 39, 42, 0.05);
    }

    &-thumbnails {
      position: relative;
      margin-block: auto;
      & :global(img) {
        max-height: 300px;
      }
    }

    &-content {
      display: flex;
      height: 100%;
      flex-direction: column;
      @include breakpoint(desktop) {
        width: 100%;
      }

      h1 {
        font-size: var(--font-h4);
        font-weight: 700;
        margin-block: 1rem 0.5rem;

        a {
          display: flex;
          justify-content: space-between;
        }

        .project-name {
          display: flex;
          justify-content: center;
          gap: 0.75rem;
        }
      }
    }

    &-description {
      color: #4b5563;
      margin-bottom: 1rem;
    }

    &-platforme {
      display: none;
    }

    &-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }

    &-actions {
      margin-top: auto;
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 0.75rem;
      .button {
        max-width: 300px;
      }
      @include breakpoint(tablet) {
        flex-direction: row;
        .button {
          width: 100%;
        }
      }
    }
  }

  .icon-button {
    transition: transform 0.3s ease-in-out;
    &:hover {
      transform: translateX(5px);
    }
  }
</style>
